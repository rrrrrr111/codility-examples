/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ru.roman.certification.operator;

/**
 * 1.Булевские операции выполняются над булевскими переменными и их результатом
 * также является значение типа boolean.
 * 2. Операции "&", "|" и "^" можно, также как и соответствующие побитовые операции
 * использовать в составных операциях присваивания: "&=", "|=" и "^="
 * 3. Кроме того, к булевским операндам применимы операции "==" (равно) и "!="
 * (не равно).
 * 4. операция ИЛИ приводит к результату
 * true, когда первый операнд равен true, незави­симо от значения второго
 * операнда, а операция И приводит к результату false, когда первый операнд
 * равен false, независимо от значения второго операнда.
 * 5. В Java определены еще две булевские операции: вторые версии булевских
 * операций И и ИЛИ, известные как укороченные (short-circuit) логические
 * операции: укороченное И "&&" и укороченное ИЛИ "||". При использовании
 * этих операций второй операнд вообще не будет вычисляться, что полезно в
 * тех случаях, когда правильное функционирование правого операнда зависит
 * от того, имеет ли левый операнд значение true или false.
 *
 * 6. укороченные (short-circuit) И "&&" и  ИЛИ "||" в отличии от нормальных
 * & и | не могут применяться как поразрядные И и ИЛИ, и используются только
 * как логические операторы
 *
 * @author churganov_r 17.03.2011
 */
public class Boolean {

    public static void main(String[] args) {

        boolean isInRange = false, isValid, isNotValid,
                isEqual, isNotEqual;
        int x = 8;

        System.out.println(x > 0 & x < 5);   // одно и тоже только
        System.out.println(x > 0 && x < 5);  // здесь второе не проверяется если первое false

        isValid = x > 0 || x > 5; // isValid = true
        isNotValid = !isValid; // isNotValid = false
        isEqual = isInRange == isValid; // isEqual = false
        // isNotEqual = true
        isNotEqual = isInRange != isValid;


    }
}
